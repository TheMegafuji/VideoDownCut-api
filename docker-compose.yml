version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: videodowncut:latest
    container_name: videodowncut-api
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3001}
      - VIDEO_STORAGE_PATH=/app/uploads
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CLEANUP_CRON_SCHEDULE=${CLEANUP_CRON_SCHEDULE:-0 3 * * *}
      - CLEANUP_THRESHOLD_DAYS=${CLEANUP_THRESHOLD_DAYS:-7}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-videodowncut}
    depends_on:
      - postgres
    networks:
      - videodowncut-network

  postgres:
    image: postgres:15-alpine
    container_name: videodowncut-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-videodowncut}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - videodowncut-network

volumes:
  postgres-data:
    name: videodowncut-postgres-data

networks:
  videodowncut-network:
    name: videodowncut-network 